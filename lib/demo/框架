# redux
1.Store
Store 就是保存数据的地方，你可以把它看成一个容器。整个应用只能有一个 Store。

2.State
Store对象包含所有数据。如果想得到某个时点的数据，就要对 Store 生成快照。

3.Action
State 的变化，会导致 View 的变化。但是，用户接触不到 State，只能接触到 View。
所以，State 的变化必须是 View 导致的。Action 就是 View 发出的通知，表示 State 应该要发生变化了

4.Reducer
Store 收到 Action 以后，必须给出一个新的 State，这样 View 才会发生变化。
这种 State 的计算过程就叫做 Reducer。
Reducer 是一个函数，它接受 Action 和当前 State 作为参数，返回一个新的 State

Redux 提供了一个combineReducers方法，用于 Reducer 的拆分

5.middleware 
中间伯,做异步操作

1->发出action
store.dispatch(action) 

2->Store 自动调用 Reducer，并且传入两个参数：当前 State 和收到的 Action。
Reducer 会返回新的 State 
requestingLogin(LoginState state, action)

3->State 一旦有变化，Store 就会调用监听函数
// 设置监听函数
store.subscribe(listener);